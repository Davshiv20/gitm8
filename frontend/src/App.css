/* Custom radial gradient utilities */
@layer utilities {
  .bg-gradient-radial {
    background-image: radial-gradient(circle, var(--tw-gradient-stops));
  }
}

/* Subtle floating animation for gradient orbs */
@keyframes float-slow {
  0%, 100% { 
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) scale(1);
  }
  50% { 
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) scale(1.1) rotate(5deg);
  }
}

@keyframes float-medium {
  0%, 100% { 
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) scale(1);
  }
  33% { 
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) scale(1.05) rotate(-3deg);
  }
  66% { 
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) scale(0.95) rotate(2deg);
  }
}

/* Optional: Add subtle animation to gradient orbs */
.animate-float-slow {
  animation: float-slow 20s ease-in-out infinite;
}

.animate-float-medium {
  animation: float-medium 15s ease-in-out infinite;
}

/* Glassmorphism button styles */
.glass-button {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
}

.glass-button:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

/* Typography enhancements */
h1 {
  text-shadow: 0 0 40px rgba(255, 255, 255, 0.5);
  letter-spacing: -0.02em;
}

/* Optional: Light mode version */
@media (prefers-color-scheme: light) {
  .light-mode {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }
  
  .light-mode .gradient-orb-1 {
    background: radial-gradient(circle, rgba(139, 92, 246, 0.1) 0%, rgba(59, 130, 246, 0.05) 50%, transparent 100%);
  }
  
  .light-mode .gradient-orb-2 {
    background: radial-gradient(circle, rgba(249, 115, 22, 0.08) 0%, rgba(239, 68, 68, 0.04) 50%, transparent 100%);
  }
  
  .light-mode .gradient-orb-3 {
    background: radial-gradient(circle, rgba(16, 185, 129, 0.06) 0%, rgba(20, 184, 166, 0.03) 50%, transparent 100%);
  }
}

/* Add these styles to your App.css for enhanced landing card effects */

.landing-card-container {
  position: relative;
  overflow: visible;
}

/* Create a clipping mask effect for the cards */
.card-clip-left {
  clip-path: polygon(0% 0%, 85% 0%, 100% 50%, 85% 100%, 0% 100%);
}

.card-clip-right {
  clip-path: polygon(15% 0%, 100% 0%, 100% 100%, 15% 100%, 0% 50%);
}

/* Glassmorphism effect for modern look */
.glass-card {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
}

/* Floating animation for cards */
@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

.floating-card {
  animation: float 4s ease-in-out infinite;
  animation-delay: var(--delay, 0s);
}

/* Cut-off text effect */
.text-cutoff {
  position: relative;
  overflow: hidden;
}

.text-cutoff::after {
  content: '';
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 30px;
  background: linear-gradient(to right, transparent, white);
  pointer-events: none;
}

/* Partial visibility overlay */
.partial-overlay-left {
  background: linear-gradient(
    to right,
    transparent 0%,
    transparent 60%,
    rgba(255, 255, 255, 0.3) 80%,
    rgba(255, 255, 255, 0.8) 90%,
    white 100%
  );
}

.partial-overlay-right {
  background: linear-gradient(
    to left,
    transparent 0%,
    transparent 60%,
    rgba(255, 255, 255, 0.3) 80%,
    rgba(255, 255, 255, 0.8) 90%,
    white 100%
  );
}

/* HTML: <div class="loader"></div> */
.loader {
  width: 10px;
  height: 25px;
  border: 1px solid;
  box-sizing: border-box;
  border-radius: 50%;
  display: grid;
  animation: l2 2s infinite linear;
}
.loader:before,
.loader:after {
  content: "";
  grid-area: 1/1;
  border: inherit;
  border-radius: 50%;
  animation: inherit;
  animation-duration: 3s;
}
.loader:after {
  --s:-1;
}
@keyframes l2 {
   100% {transform:rotate(calc(var(--s,1)*1turn))}
}